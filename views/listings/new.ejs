<% layout("/layouts/boilerplate") -%>

<style> /*styling for countryInp*/
    .options {
        /* list-style: none;   */
        padding: 0;        /* Removes default padding */
    }

    .wrapper{
    
    }

    .select-btn, .options li{
        display: flex;
        cursor: pointer;
        align-items: center;
    }

    .select-btn{
        /* width: 50%; */
        height: calc(1.5em + 0.75rem + 2px); /* Equals 38px */
        padding: 0.375rem 0.75rem;           /* Vertical & horizontal padding */
        font-size: 1rem;                     /* Base font size */
        line-height: 1.5;                    /* Text spacing */

        border: 1px solid #dddfe1;
        border-radius: 0.275rem; /* 6px rounded corners */
        /* padding: 0 20px; */
        border-radius: 7px;
        background: #fff;            
        justify-content: space-between;
        position: relative;  /* Important to define positioning context */
        z-index: 9999;       /* Ensures dropdown appears above other elements */
    }

    .select-btn i{
        font-size: 23px;
        transition: transform 0.3s linear;
    }

    .wrapper.active .select-btn i{
        transform: rotate(-180deg);
    }

    .wrapper.active .select-btn{
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25); /* Blue glow */
    }

    .content{
        display: none;
        padding: 10px;
        margin-top: 15px;
        border-radius: 7px;
        background: #fff;
        position: absolute;   /* Key fix to overlap other fields */
        z-index: 9999;        /* High z-index to appear above other inputs */
        border: 1px solid #dddfe1;
    }

    .wrapper.active .content{
        display:block;
    }

    .content .search{
        position: relative;
    }

    .search i{
        left: 15px;
        color: #999;
        font-size: 20px;
        line-height: 40px;
        position: absolute;
    }

    .search input{
        height: 40px;
        width: 100%;
        outline: none;
        font-size: 1rem; 
        border-radius: 5px;
        padding: 0 15px 0 43px;
        border: 1px solid #b3b3b3;
    }

    .content .options{
        margin-top: 10px;
        margin-bottom: 0px;
        max-height: 240px;
        overflow-y: auto;
        padding-right: 7px;
        border-radius: 5px;
        border: 1px solid #dddfe1;
    }

    .options::-webkit-scrollbar{
        width: 7px;
    }
    .options::-webkit-scrollbar-track{
        background: #f1f1f1;
        border-radius: 25px;
    }
    .options::-webkit-scrollbar-thumb{
        background: #ccc;
        border-radius: 25px;
    }

    .options li{
        height: 40px;
        padding: 0 10px;
        font-size: 1rem;    
        /* font-size of options */
        border-radius: 5px;
        margin-left: 7px;
    }

    .options li:hover, li.selected{
        background: #f2f2f2;
    }

</style>

    <div class="row mt-3">
        <div class="col-8 offset-2">
            <!-- <br><br> -->
    <h3>Create a New Listing</h3>
    <br>
    <form method ="POST" action="/listings" novalidate class="needs-validation" enctype="multipart/form-data">
        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <input name = "listing[title]" placeholder="Add a catchy title" type="text" class="form-control" required>
            <div class="valid-feedback">Title looks good!</div>
            <div class="invalid-feedback">Title cannot be empty</div>
        </div>
        
        <div class="mb-3"> 
            <label for="description" class="form-label">Description</label>
            <textarea name="listing[description]" class="form-control" required></textarea>
            <div class="invalid-feedback">Please enter a short description</div>
        </div>

        <div class="mb-3">
            <label for="image" class="form-label">Upload Listing Images</label>
            <input name="listing[images]" type="file" class="form-control" multiple required>
            <div class="invalid-feedback">Please upload at least one image</div>
        </div>

        <div class="row">
            <div class="mb-3 col-md-4">
                <label for="price" class="form-label">Price</label>
                <input name ="listing[price]" type="number" placeholder="1200"  class="form-control" min="1" step="1" required > 
                <div class="invalid-feedback">Price should be valid</div>
            </div>

            <div class="mb-3 col-md-4">
                <label for="country" class="form-label">Country</label>
                

                <div class="wrapper">
                    <div class="select-btn">
                        <span>Select Country</span>
                        <i class="uil uil-angle-down"></i>
                    </div>
                    <div class="content">
                        <div class="search">
                            <i class="uil uil-search"></i>
                            <input name = "listing[country]" placeholder="India" type="text" >
                        </div>
                        <ul class="options">
                                
                        </ul>
                    </div>
                </div>

                <div class="invalid-feedback">Country name should be valid</div>
            </div>

            <div class="mb-3 col-md-4">
                <label for="category" class="form-label">Category</label>
                <select name="listing[category]" class="form-select" autocomplete="category" id="category"  required>
                    <option value="Rooms">Rooms</option>
                    <option value="Iconic Cities">Iconic Cities</option>
                    <option value="Mountains">Mountains</option>
                    <option value="Castles">Castles</option>
                    <option value="Amazing Pools">Amazing Pools</option>
                    <option value="Camping">Camping</option>
                    <option value="Farms">Farms</option>
                    <option value="Arctic">Arctic</option>
                    <option value="Domes">Domes</option>
                    <option value="Boats">Boats</option>
                    <option value="Play">Play</option>
                    <option value="Beach">Beach</option>
                    <option value="Other">Other</option>
                </select>
                <div class="invalid-feedback">Category should be selected</div>
            </div>
        </div>
        
        
        <div class="mb-3">
            <label for="location" class="form-label">Location</label>
            <input name = "listing[location]" placeholder="Jaipur, Rajasthan" type="text" class="form-control" required>
            <div class="invalid-feedback">Location should be valid</div>
        </div>
        
        <button class="btn btn-dark add-btn mt-3 mb-5">Add</button>
        
    </form>
 </div>
</div>

<script>

    const wrapper = document.querySelector(".wrapper"),
    selectBtn = wrapper.querySelector(".select-btn"),
    searchInp = wrapper.querySelector("input"),
    options = wrapper.querySelector(".options");

    //array of countries
    let countries = [
            "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", 
            "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan",
            "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus",
            "Belgium", "Belize", "Bhutan", "Bolivia", "Bosnia and Herzegovina",
            "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burundi",
            "Cambodia", "Cameroon", "Canada", "Central African Republic", "Chad",
            "Chile", "China", "Colombia", "Comoros", "Congo", "Costa Rica", "Croatia",
            "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica",
            "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea",
            "Eritrea", "Estonia", "Eswatini", "Ethiopia", "Fiji", "Finland", "France",
            "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Grenada",
            "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras",
            "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel",
            "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati",
            "Korea", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", 
            "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg",
            "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Mexico", 
            "Moldova", "Monaco", "Mongolia", "Morocco", "Mozambique", "Myanmar", 
            "Namibia", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", 
            "Nigeria", "North Korea", "Norway", "Oman", "Pakistan", "Palestine", 
            "Panama", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", 
            "Qatar", "Romania", "Russia", "Rwanda", "Saudi Arabia", "Senegal", 
            "Serbia", "Seychelles", "Singapore", "Slovakia", "Slovenia", "Somalia", 
            "South Africa", "South Korea", "Spain", "Sri Lanka", "Sudan", "Suriname",
            "Sweden", "Switzerland", "Syria", "Tajikistan", "Tanzania", "Thailand",
            "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan",
            "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States",
            "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Zambia",
            "Zimbabwe"
        ];

    function addCountry(selectedCountry){
        options.innerHTML = "";
        countries.forEach(country => {
            let isSelected = country == selectedCountry ? "selected" : "";
            // adding each country inside li and inserting all li inside options tag
            let li = `<li onclick="updateName(this)" class="${isSelected}">${country}</li>`;
            options.insertAdjacentHTML("beforeend", li);
        })
    }

    addCountry();

    function updateName(selectedLi) {
        searchInp.value = selectedLi.innerText; // Set selected value in the input
        addCountry(selectedLi.innerText);
        wrapper.classList.remove("active");
        selectBtn.firstElementChild.innerText = selectedLi.innerText;
    }



    document.querySelector("form").addEventListener("submit", (e) => {
        if (!searchInp.value.trim()) {
            e.preventDefault(); // Prevent form submission if the country is empty
            alert("Please select a valid country.");
        }
    });

    searchInp.addEventListener("keyup", ()=>{
        let arr = [];
        let searchedVal = searchInp.value.toLowerCase();
        // returning all countries from array which are start with user searched value
        arr = countries.filter(data=> {
            return data.toLowerCase().startsWith(searchedVal);
        }).map(data => `<li onclick="updateName(this)">${data}</li>`).join("");
        options.innerHTML = arr ? arr : `<pre>  Oops! Country not found</pre>`;
        
    })


    selectBtn.addEventListener("click", () => {
        wrapper.classList.toggle("active");
    });


    </script>
    
    
    

